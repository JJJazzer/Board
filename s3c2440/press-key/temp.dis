
a.out:     file format elf32-i386


Disassembly of section .interp:

00000154 <.interp>:
 154:	2f                   	das    
 155:	6c                   	insb   (%dx),%es:(%edi)
 156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 15d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

00000168 <.note.ABI-tag>:
 168:	04 00                	add    $0x0,%al
 16a:	00 00                	add    %al,(%eax)
 16c:	10 00                	adc    %al,(%eax)
 16e:	00 00                	add    %al,(%eax)
 170:	01 00                	add    %eax,(%eax)
 172:	00 00                	add    %al,(%eax)
 174:	47                   	inc    %edi
 175:	4e                   	dec    %esi
 176:	55                   	push   %ebp
 177:	00 00                	add    %al,(%eax)
 179:	00 00                	add    %al,(%eax)
 17b:	00 03                	add    %al,(%ebx)
 17d:	00 00                	add    %al,(%eax)
 17f:	00 02                	add    %al,(%edx)
 181:	00 00                	add    %al,(%eax)
 183:	00 00                	add    %al,(%eax)
 185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

00000188 <.note.gnu.build-id>:
 188:	04 00                	add    $0x0,%al
 18a:	00 00                	add    %al,(%eax)
 18c:	14 00                	adc    $0x0,%al
 18e:	00 00                	add    %al,(%eax)
 190:	03 00                	add    (%eax),%eax
 192:	00 00                	add    %al,(%eax)
 194:	47                   	inc    %edi
 195:	4e                   	dec    %esi
 196:	55                   	push   %ebp
 197:	00 0b                	add    %cl,(%ebx)
 199:	22 f8                	and    %al,%bh
 19b:	b6 b4                	mov    $0xb4,%dh
 19d:	ab                   	stos   %eax,%es:(%edi)
 19e:	2f                   	das    
 19f:	45                   	inc    %ebp
 1a0:	5e                   	pop    %esi
 1a1:	28 d2                	sub    %dl,%dl
 1a3:	95                   	xchg   %eax,%ebp
 1a4:	1a 46 e4             	sbb    -0x1c(%esi),%al
 1a7:	75 34                	jne    1dd <_init-0x1c3>
 1a9:	45                   	inc    %ebp
 1aa:	92                   	xchg   %eax,%edx
 1ab:	7e                   	.byte 0x7e

Disassembly of section .gnu.hash:

000001ac <.gnu.hash>:
 1ac:	02 00                	add    (%eax),%al
 1ae:	00 00                	add    %al,(%eax)
 1b0:	07                   	pop    %es
 1b1:	00 00                	add    %al,(%eax)
 1b3:	00 01                	add    %al,(%ecx)
 1b5:	00 00                	add    %al,(%eax)
 1b7:	00 05 00 00 00 00    	add    %al,0x0
 1bd:	20 00                	and    %al,(%eax)
 1bf:	20 00                	and    %al,(%eax)
 1c1:	00 00                	add    %al,(%eax)
 1c3:	00 07                	add    %al,(%edi)
 1c5:	00 00                	add    %al,(%eax)
 1c7:	00                   	.byte 0x0
 1c8:	ad                   	lods   %ds:(%esi),%eax
 1c9:	4b                   	dec    %ebx
 1ca:	e3 c0                	jecxz  18c <_init-0x214>

Disassembly of section .dynsym:

000001cc <.dynsym>:
	...
 1dc:	6c                   	insb   (%dx),%es:(%edi)
	...
 1e5:	00 00                	add    %al,(%eax)
 1e7:	00 20                	add    %ah,(%eax)
 1e9:	00 00                	add    %al,(%eax)
 1eb:	00 3b                	add    %bh,(%ebx)
	...
 1f5:	00 00                	add    %al,(%eax)
 1f7:	00 12                	add    %dl,(%edx)
 1f9:	00 00                	add    %al,(%eax)
 1fb:	00 1a                	add    %bl,(%edx)
	...
 205:	00 00                	add    %al,(%eax)
 207:	00 22                	add    %ah,(%edx)
 209:	00 00                	add    %al,(%eax)
 20b:	00 88 00 00 00 00    	add    %cl,0x0(%eax)
 211:	00 00                	add    %al,(%eax)
 213:	00 00                	add    %al,(%eax)
 215:	00 00                	add    %al,(%eax)
 217:	00 20                	add    %ah,(%eax)
 219:	00 00                	add    %al,(%eax)
 21b:	00 29                	add    %ch,(%ecx)
	...
 225:	00 00                	add    %al,(%eax)
 227:	00 12                	add    %dl,(%edx)
 229:	00 00                	add    %al,(%eax)
 22b:	00 97 00 00 00 00    	add    %dl,0x0(%edi)
 231:	00 00                	add    %al,(%eax)
 233:	00 00                	add    %al,(%eax)
 235:	00 00                	add    %al,(%eax)
 237:	00 20                	add    %ah,(%eax)
 239:	00 00                	add    %al,(%eax)
 23b:	00 0b                	add    %cl,(%ebx)
 23d:	00 00                	add    %al,(%eax)
 23f:	00 3c 06             	add    %bh,(%esi,%eax,1)
 242:	00 00                	add    %al,(%eax)
 244:	04 00                	add    $0x0,%al
 246:	00 00                	add    %al,(%eax)
 248:	11 00                	adc    %eax,(%eax)
 24a:	10 00                	adc    %al,(%eax)

Disassembly of section .dynstr:

0000024c <.dynstr>:
 24c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 250:	63 2e                	arpl   %bp,(%esi)
 252:	73 6f                	jae    2c3 <_init-0xdd>
 254:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 259:	4f                   	dec    %edi
 25a:	5f                   	pop    %edi
 25b:	73 74                	jae    2d1 <_init-0xcf>
 25d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 264:	64 
 265:	00 5f 5f             	add    %bl,0x5f(%edi)
 268:	63 78 61             	arpl   %di,0x61(%eax)
 26b:	5f                   	pop    %edi
 26c:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%esi),%bp
 272:	7a 65                	jp     2d9 <_init-0xc7>
 274:	00 5f 5f             	add    %bl,0x5f(%edi)
 277:	6c                   	insb   (%dx),%es:(%edi)
 278:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 27f:	72 74                	jb     2f5 <_init-0xab>
 281:	5f                   	pop    %edi
 282:	6d                   	insl   (%dx),%es:(%edi)
 283:	61                   	popa   
 284:	69 6e 00 5f 5f 73 74 	imul   $0x74735f5f,0x0(%esi),%ebp
 28b:	61                   	popa   
 28c:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 28f:	63 68 6b             	arpl   %bp,0x6b(%eax)
 292:	5f                   	pop    %edi
 293:	66 61                	popaw  
 295:	69 6c 00 47 4c 49 42 	imul   $0x4342494c,0x47(%eax,%eax,1),%ebp
 29c:	43 
 29d:	5f                   	pop    %edi
 29e:	32 2e                	xor    (%esi),%ch
 2a0:	30 00                	xor    %al,(%eax)
 2a2:	47                   	inc    %edi
 2a3:	4c                   	dec    %esp
 2a4:	49                   	dec    %ecx
 2a5:	42                   	inc    %edx
 2a6:	43                   	inc    %ebx
 2a7:	5f                   	pop    %edi
 2a8:	32 2e                	xor    (%esi),%ch
 2aa:	31 2e                	xor    %ebp,(%esi)
 2ac:	33 00                	xor    (%eax),%eax
 2ae:	47                   	inc    %edi
 2af:	4c                   	dec    %esp
 2b0:	49                   	dec    %ecx
 2b1:	42                   	inc    %edx
 2b2:	43                   	inc    %ebx
 2b3:	5f                   	pop    %edi
 2b4:	32 2e                	xor    (%esi),%ch
 2b6:	34 00                	xor    $0x0,%al
 2b8:	5f                   	pop    %edi
 2b9:	49                   	dec    %ecx
 2ba:	54                   	push   %esp
 2bb:	4d                   	dec    %ebp
 2bc:	5f                   	pop    %edi
 2bd:	64 65 72 65          	fs gs jb 326 <_init-0x7a>
 2c1:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 2c8:	4d 
 2c9:	43                   	inc    %ebx
 2ca:	6c                   	insb   (%dx),%es:(%edi)
 2cb:	6f                   	outsl  %ds:(%esi),(%dx)
 2cc:	6e                   	outsb  %ds:(%esi),(%dx)
 2cd:	65 54                	gs push %esp
 2cf:	61                   	popa   
 2d0:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 2d4:	5f                   	pop    %edi
 2d5:	5f                   	pop    %edi
 2d6:	67 6d                	insl   (%dx),%es:(%di)
 2d8:	6f                   	outsl  %ds:(%esi),(%dx)
 2d9:	6e                   	outsb  %ds:(%esi),(%dx)
 2da:	5f                   	pop    %edi
 2db:	73 74                	jae    351 <_init-0x4f>
 2dd:	61                   	popa   
 2de:	72 74                	jb     354 <_init-0x4c>
 2e0:	5f                   	pop    %edi
 2e1:	5f                   	pop    %edi
 2e2:	00 5f 49             	add    %bl,0x49(%edi)
 2e5:	54                   	push   %esp
 2e6:	4d                   	dec    %ebp
 2e7:	5f                   	pop    %edi
 2e8:	72 65                	jb     34f <_init-0x51>
 2ea:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 2f1:	4d 
 2f2:	43                   	inc    %ebx
 2f3:	6c                   	insb   (%dx),%es:(%edi)
 2f4:	6f                   	outsl  %ds:(%esi),(%dx)
 2f5:	6e                   	outsb  %ds:(%esi),(%dx)
 2f6:	65 54                	gs push %esp
 2f8:	61                   	popa   
 2f9:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)

Disassembly of section .gnu.version:

000002fe <.gnu.version>:
 2fe:	00 00                	add    %al,(%eax)
 300:	00 00                	add    %al,(%eax)
 302:	02 00                	add    (%eax),%al
 304:	03 00                	add    (%eax),%eax
 306:	00 00                	add    %al,(%eax)
 308:	04 00                	add    $0x0,%al
 30a:	00 00                	add    %al,(%eax)
 30c:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

00000310 <.gnu.version_r>:
 310:	01 00                	add    %eax,(%eax)
 312:	03 00                	add    (%eax),%eax
 314:	01 00                	add    %eax,(%eax)
 316:	00 00                	add    %al,(%eax)
 318:	10 00                	adc    %al,(%eax)
 31a:	00 00                	add    %al,(%eax)
 31c:	00 00                	add    %al,(%eax)
 31e:	00 00                	add    %al,(%eax)
 320:	10 69 69             	adc    %ch,0x69(%ecx)
 323:	0d 00 00 04 00       	or     $0x40000,%eax
 328:	4c                   	dec    %esp
 329:	00 00                	add    %al,(%eax)
 32b:	00 10                	add    %dl,(%eax)
 32d:	00 00                	add    %al,(%eax)
 32f:	00 73 1f             	add    %dh,0x1f(%ebx)
 332:	69 09 00 00 03 00    	imul   $0x30000,(%ecx),%ecx
 338:	56                   	push   %esi
 339:	00 00                	add    %al,(%eax)
 33b:	00 10                	add    %dl,(%eax)
 33d:	00 00                	add    %al,(%eax)
 33f:	00 14 69             	add    %dl,(%ecx,%ebp,2)
 342:	69 0d 00 00 02 00 62 	imul   $0x62,0x20000,%ecx
 349:	00 00 00 
 34c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

00000350 <.rel.dyn>:
 350:	d8 1e                	fcomps (%esi)
 352:	00 00                	add    %al,(%eax)
 354:	08 00                	or     %al,(%eax)
 356:	00 00                	add    %al,(%eax)
 358:	dc 1e                	fcompl (%esi)
 35a:	00 00                	add    %al,(%eax)
 35c:	08 00                	or     %al,(%eax)
 35e:	00 00                	add    %al,(%eax)
 360:	f8                   	clc    
 361:	1f                   	pop    %ds
 362:	00 00                	add    %al,(%eax)
 364:	08 00                	or     %al,(%eax)
 366:	00 00                	add    %al,(%eax)
 368:	04 20                	add    $0x20,%al
 36a:	00 00                	add    %al,(%eax)
 36c:	08 00                	or     %al,(%eax)
 36e:	00 00                	add    %al,(%eax)
 370:	ec                   	in     (%dx),%al
 371:	1f                   	pop    %ds
 372:	00 00                	add    %al,(%eax)
 374:	06                   	push   %es
 375:	01 00                	add    %eax,(%eax)
 377:	00 f0                	add    %dh,%al
 379:	1f                   	pop    %ds
 37a:	00 00                	add    %al,(%eax)
 37c:	06                   	push   %es
 37d:	03 00                	add    (%eax),%eax
 37f:	00 f4                	add    %dh,%ah
 381:	1f                   	pop    %ds
 382:	00 00                	add    %al,(%eax)
 384:	06                   	push   %es
 385:	04 00                	add    $0x0,%al
 387:	00 fc                	add    %bh,%ah
 389:	1f                   	pop    %ds
 38a:	00 00                	add    %al,(%eax)
 38c:	06                   	push   %es
 38d:	06                   	push   %es
	...

Disassembly of section .rel.plt:

00000390 <.rel.plt>:
 390:	e4 1f                	in     $0x1f,%al
 392:	00 00                	add    %al,(%eax)
 394:	07                   	pop    %es
 395:	02 00                	add    (%eax),%al
 397:	00 e8                	add    %ch,%al
 399:	1f                   	pop    %ds
 39a:	00 00                	add    %al,(%eax)
 39c:	07                   	pop    %es
 39d:	05                   	.byte 0x5
	...

Disassembly of section .init:

000003a0 <_init>:
 3a0:	53                   	push   %ebx
 3a1:	83 ec 08             	sub    $0x8,%esp
 3a4:	e8 a7 00 00 00       	call   450 <__x86.get_pc_thunk.bx>
 3a9:	81 c3 2f 1c 00 00    	add    $0x1c2f,%ebx
 3af:	8b 83 1c 00 00 00    	mov    0x1c(%ebx),%eax
 3b5:	85 c0                	test   %eax,%eax
 3b7:	74 05                	je     3be <_init+0x1e>
 3b9:	e8 4a 00 00 00       	call   408 <__gmon_start__@plt>
 3be:	83 c4 08             	add    $0x8,%esp
 3c1:	5b                   	pop    %ebx
 3c2:	c3                   	ret    

Disassembly of section .plt:

000003d0 <.plt>:
 3d0:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 3d6:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 3dc:	00 00                	add    %al,(%eax)
	...

000003e0 <__stack_chk_fail@plt>:
 3e0:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 3e6:	68 00 00 00 00       	push   $0x0
 3eb:	e9 e0 ff ff ff       	jmp    3d0 <.plt>

000003f0 <__libc_start_main@plt>:
 3f0:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 3f6:	68 08 00 00 00       	push   $0x8
 3fb:	e9 d0 ff ff ff       	jmp    3d0 <.plt>

Disassembly of section .plt.got:

00000400 <__cxa_finalize@plt>:
 400:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
 406:	66 90                	xchg   %ax,%ax

00000408 <__gmon_start__@plt>:
 408:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
 40e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000410 <_start>:
 410:	31 ed                	xor    %ebp,%ebp
 412:	5e                   	pop    %esi
 413:	89 e1                	mov    %esp,%ecx
 415:	83 e4 f0             	and    $0xfffffff0,%esp
 418:	50                   	push   %eax
 419:	54                   	push   %esp
 41a:	52                   	push   %edx
 41b:	e8 22 00 00 00       	call   442 <_start+0x32>
 420:	81 c3 b8 1b 00 00    	add    $0x1bb8,%ebx
 426:	8d 83 28 e6 ff ff    	lea    -0x19d8(%ebx),%eax
 42c:	50                   	push   %eax
 42d:	8d 83 c8 e5 ff ff    	lea    -0x1a38(%ebx),%eax
 433:	50                   	push   %eax
 434:	51                   	push   %ecx
 435:	56                   	push   %esi
 436:	ff b3 20 00 00 00    	pushl  0x20(%ebx)
 43c:	e8 af ff ff ff       	call   3f0 <__libc_start_main@plt>
 441:	f4                   	hlt    
 442:	8b 1c 24             	mov    (%esp),%ebx
 445:	c3                   	ret    
 446:	66 90                	xchg   %ax,%ax
 448:	66 90                	xchg   %ax,%ax
 44a:	66 90                	xchg   %ax,%ax
 44c:	66 90                	xchg   %ax,%ax
 44e:	66 90                	xchg   %ax,%ax

00000450 <__x86.get_pc_thunk.bx>:
 450:	8b 1c 24             	mov    (%esp),%ebx
 453:	c3                   	ret    
 454:	66 90                	xchg   %ax,%ax
 456:	66 90                	xchg   %ax,%ax
 458:	66 90                	xchg   %ax,%ax
 45a:	66 90                	xchg   %ax,%ax
 45c:	66 90                	xchg   %ax,%ax
 45e:	66 90                	xchg   %ax,%ax

00000460 <deregister_tm_clones>:
 460:	e8 e4 00 00 00       	call   549 <__x86.get_pc_thunk.dx>
 465:	81 c2 73 1b 00 00    	add    $0x1b73,%edx
 46b:	8d 8a 30 00 00 00    	lea    0x30(%edx),%ecx
 471:	8d 82 30 00 00 00    	lea    0x30(%edx),%eax
 477:	39 c8                	cmp    %ecx,%eax
 479:	74 1d                	je     498 <deregister_tm_clones+0x38>
 47b:	8b 82 14 00 00 00    	mov    0x14(%edx),%eax
 481:	85 c0                	test   %eax,%eax
 483:	74 13                	je     498 <deregister_tm_clones+0x38>
 485:	55                   	push   %ebp
 486:	89 e5                	mov    %esp,%ebp
 488:	83 ec 14             	sub    $0x14,%esp
 48b:	51                   	push   %ecx
 48c:	ff d0                	call   *%eax
 48e:	83 c4 10             	add    $0x10,%esp
 491:	c9                   	leave  
 492:	c3                   	ret    
 493:	90                   	nop
 494:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 498:	f3 c3                	repz ret 
 49a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000004a0 <register_tm_clones>:
 4a0:	e8 a4 00 00 00       	call   549 <__x86.get_pc_thunk.dx>
 4a5:	81 c2 33 1b 00 00    	add    $0x1b33,%edx
 4ab:	55                   	push   %ebp
 4ac:	8d 8a 30 00 00 00    	lea    0x30(%edx),%ecx
 4b2:	8d 82 30 00 00 00    	lea    0x30(%edx),%eax
 4b8:	29 c8                	sub    %ecx,%eax
 4ba:	89 e5                	mov    %esp,%ebp
 4bc:	53                   	push   %ebx
 4bd:	c1 f8 02             	sar    $0x2,%eax
 4c0:	89 c3                	mov    %eax,%ebx
 4c2:	83 ec 04             	sub    $0x4,%esp
 4c5:	c1 eb 1f             	shr    $0x1f,%ebx
 4c8:	01 d8                	add    %ebx,%eax
 4ca:	d1 f8                	sar    %eax
 4cc:	74 14                	je     4e2 <register_tm_clones+0x42>
 4ce:	8b 92 24 00 00 00    	mov    0x24(%edx),%edx
 4d4:	85 d2                	test   %edx,%edx
 4d6:	74 0a                	je     4e2 <register_tm_clones+0x42>
 4d8:	83 ec 08             	sub    $0x8,%esp
 4db:	50                   	push   %eax
 4dc:	51                   	push   %ecx
 4dd:	ff d2                	call   *%edx
 4df:	83 c4 10             	add    $0x10,%esp
 4e2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 4e5:	c9                   	leave  
 4e6:	c3                   	ret    
 4e7:	89 f6                	mov    %esi,%esi
 4e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000004f0 <__do_global_dtors_aux>:
 4f0:	55                   	push   %ebp
 4f1:	89 e5                	mov    %esp,%ebp
 4f3:	53                   	push   %ebx
 4f4:	e8 57 ff ff ff       	call   450 <__x86.get_pc_thunk.bx>
 4f9:	81 c3 df 1a 00 00    	add    $0x1adf,%ebx
 4ff:	83 ec 04             	sub    $0x4,%esp
 502:	80 bb 30 00 00 00 00 	cmpb   $0x0,0x30(%ebx)
 509:	75 27                	jne    532 <__do_global_dtors_aux+0x42>
 50b:	8b 83 18 00 00 00    	mov    0x18(%ebx),%eax
 511:	85 c0                	test   %eax,%eax
 513:	74 11                	je     526 <__do_global_dtors_aux+0x36>
 515:	83 ec 0c             	sub    $0xc,%esp
 518:	ff b3 2c 00 00 00    	pushl  0x2c(%ebx)
 51e:	e8 dd fe ff ff       	call   400 <__cxa_finalize@plt>
 523:	83 c4 10             	add    $0x10,%esp
 526:	e8 35 ff ff ff       	call   460 <deregister_tm_clones>
 52b:	c6 83 30 00 00 00 01 	movb   $0x1,0x30(%ebx)
 532:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 535:	c9                   	leave  
 536:	c3                   	ret    
 537:	89 f6                	mov    %esi,%esi
 539:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000540 <frame_dummy>:
 540:	55                   	push   %ebp
 541:	89 e5                	mov    %esp,%ebp
 543:	5d                   	pop    %ebp
 544:	e9 57 ff ff ff       	jmp    4a0 <register_tm_clones>

00000549 <__x86.get_pc_thunk.dx>:
 549:	8b 14 24             	mov    (%esp),%edx
 54c:	c3                   	ret    

0000054d <main>:
 54d:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 551:	83 e4 f0             	and    $0xfffffff0,%esp
 554:	ff 71 fc             	pushl  -0x4(%ecx)
 557:	55                   	push   %ebp
 558:	89 e5                	mov    %esp,%ebp
 55a:	51                   	push   %ecx
 55b:	83 ec 14             	sub    $0x14,%esp
 55e:	e8 39 00 00 00       	call   59c <__x86.get_pc_thunk.ax>
 563:	05 75 1a 00 00       	add    $0x1a75,%eax
 568:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 56e:	89 45 f4             	mov    %eax,-0xc(%ebp)
 571:	31 c0                	xor    %eax,%eax
 573:	8d 45 ec             	lea    -0x14(%ebp),%eax
 576:	89 45 f0             	mov    %eax,-0x10(%ebp)
 579:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
 57d:	b8 00 00 00 00       	mov    $0x0,%eax
 582:	8b 55 f4             	mov    -0xc(%ebp),%edx
 585:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 58c:	74 05                	je     593 <main+0x46>
 58e:	e8 7d 00 00 00       	call   610 <__stack_chk_fail_local>
 593:	83 c4 14             	add    $0x14,%esp
 596:	59                   	pop    %ecx
 597:	5d                   	pop    %ebp
 598:	8d 61 fc             	lea    -0x4(%ecx),%esp
 59b:	c3                   	ret    

0000059c <__x86.get_pc_thunk.ax>:
 59c:	8b 04 24             	mov    (%esp),%eax
 59f:	c3                   	ret    

000005a0 <__libc_csu_init>:
 5a0:	55                   	push   %ebp
 5a1:	57                   	push   %edi
 5a2:	56                   	push   %esi
 5a3:	53                   	push   %ebx
 5a4:	e8 a7 fe ff ff       	call   450 <__x86.get_pc_thunk.bx>
 5a9:	81 c3 2f 1a 00 00    	add    $0x1a2f,%ebx
 5af:	83 ec 0c             	sub    $0xc,%esp
 5b2:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 5b6:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
 5bc:	e8 df fd ff ff       	call   3a0 <_init>
 5c1:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 5c7:	29 c6                	sub    %eax,%esi
 5c9:	c1 fe 02             	sar    $0x2,%esi
 5cc:	85 f6                	test   %esi,%esi
 5ce:	74 25                	je     5f5 <__libc_csu_init+0x55>
 5d0:	31 ff                	xor    %edi,%edi
 5d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 5d8:	83 ec 04             	sub    $0x4,%esp
 5db:	55                   	push   %ebp
 5dc:	ff 74 24 2c          	pushl  0x2c(%esp)
 5e0:	ff 74 24 2c          	pushl  0x2c(%esp)
 5e4:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
 5eb:	83 c7 01             	add    $0x1,%edi
 5ee:	83 c4 10             	add    $0x10,%esp
 5f1:	39 fe                	cmp    %edi,%esi
 5f3:	75 e3                	jne    5d8 <__libc_csu_init+0x38>
 5f5:	83 c4 0c             	add    $0xc,%esp
 5f8:	5b                   	pop    %ebx
 5f9:	5e                   	pop    %esi
 5fa:	5f                   	pop    %edi
 5fb:	5d                   	pop    %ebp
 5fc:	c3                   	ret    
 5fd:	8d 76 00             	lea    0x0(%esi),%esi

00000600 <__libc_csu_fini>:
 600:	f3 c3                	repz ret 
 602:	66 90                	xchg   %ax,%ax
 604:	66 90                	xchg   %ax,%ax
 606:	66 90                	xchg   %ax,%ax
 608:	66 90                	xchg   %ax,%ax
 60a:	66 90                	xchg   %ax,%ax
 60c:	66 90                	xchg   %ax,%ax
 60e:	66 90                	xchg   %ax,%ax

00000610 <__stack_chk_fail_local>:
 610:	53                   	push   %ebx
 611:	e8 3a fe ff ff       	call   450 <__x86.get_pc_thunk.bx>
 616:	81 c3 c2 19 00 00    	add    $0x19c2,%ebx
 61c:	83 ec 08             	sub    $0x8,%esp
 61f:	e8 bc fd ff ff       	call   3e0 <__stack_chk_fail@plt>

Disassembly of section .fini:

00000624 <_fini>:
 624:	53                   	push   %ebx
 625:	83 ec 08             	sub    $0x8,%esp
 628:	e8 23 fe ff ff       	call   450 <__x86.get_pc_thunk.bx>
 62d:	81 c3 ab 19 00 00    	add    $0x19ab,%ebx
 633:	83 c4 08             	add    $0x8,%esp
 636:	5b                   	pop    %ebx
 637:	c3                   	ret    

Disassembly of section .rodata:

00000638 <_fp_hw>:
 638:	03 00                	add    (%eax),%eax
	...

0000063c <_IO_stdin_used>:
 63c:	01 00                	add    %eax,(%eax)
 63e:	02 00                	add    (%eax),%al

Disassembly of section .eh_frame_hdr:

00000640 <__GNU_EH_FRAME_HDR>:
 640:	01 1b                	add    %ebx,(%ebx)
 642:	03 3b                	add    (%ebx),%edi
 644:	40                   	inc    %eax
 645:	00 00                	add    %al,(%eax)
 647:	00 07                	add    %al,(%edi)
 649:	00 00                	add    %al,(%eax)
 64b:	00 90 fd ff ff 5c    	add    %dl,0x5cfffffd(%eax)
 651:	00 00                	add    %al,(%eax)
 653:	00 c0                	add    %al,%al
 655:	fd                   	std    
 656:	ff                   	(bad)  
 657:	ff 80 00 00 00 0d    	incl   0xd000000(%eax)
 65d:	ff                   	(bad)  
 65e:	ff                   	(bad)  
 65f:	ff 94 00 00 00 5c ff 	call   *-0xa40000(%eax,%eax,1)
 666:	ff                   	(bad)  
 667:	ff c0                	inc    %eax
 669:	00 00                	add    %al,(%eax)
 66b:	00 60 ff             	add    %ah,-0x1(%eax)
 66e:	ff                   	(bad)  
 66f:	ff d4                	call   *%esp
 671:	00 00                	add    %al,(%eax)
 673:	00 c0                	add    %al,%al
 675:	ff                   	(bad)  
 676:	ff                   	(bad)  
 677:	ff 20                	jmp    *(%eax)
 679:	01 00                	add    %eax,(%eax)
 67b:	00 d0                	add    %dl,%al
 67d:	ff                   	(bad)  
 67e:	ff                   	(bad)  
 67f:	ff 34 01             	pushl  (%ecx,%eax,1)
	...

Disassembly of section .eh_frame:

00000684 <__FRAME_END__-0x10c>:
 684:	14 00                	adc    $0x0,%al
 686:	00 00                	add    %al,(%eax)
 688:	00 00                	add    %al,(%eax)
 68a:	00 00                	add    %al,(%eax)
 68c:	01 7a 52             	add    %edi,0x52(%edx)
 68f:	00 01                	add    %al,(%ecx)
 691:	7c 08                	jl     69b <__GNU_EH_FRAME_HDR+0x5b>
 693:	01 1b                	add    %ebx,(%ebx)
 695:	0c 04                	or     $0x4,%al
 697:	04 88                	add    $0x88,%al
 699:	01 00                	add    %eax,(%eax)
 69b:	00 20                	add    %ah,(%eax)
 69d:	00 00                	add    %al,(%eax)
 69f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 6a2:	00 00                	add    %al,(%eax)
 6a4:	2c fd                	sub    $0xfd,%al
 6a6:	ff                   	(bad)  
 6a7:	ff 30                	pushl  (%eax)
 6a9:	00 00                	add    %al,(%eax)
 6ab:	00 00                	add    %al,(%eax)
 6ad:	0e                   	push   %cs
 6ae:	08 46 0e             	or     %al,0xe(%esi)
 6b1:	0c 4a                	or     $0x4a,%al
 6b3:	0f 0b                	ud2    
 6b5:	74 04                	je     6bb <__GNU_EH_FRAME_HDR+0x7b>
 6b7:	78 00                	js     6b9 <__GNU_EH_FRAME_HDR+0x79>
 6b9:	3f                   	aas    
 6ba:	1a 3b                	sbb    (%ebx),%bh
 6bc:	2a 32                	sub    (%edx),%dh
 6be:	24 22                	and    $0x22,%al
 6c0:	10 00                	adc    %al,(%eax)
 6c2:	00 00                	add    %al,(%eax)
 6c4:	40                   	inc    %eax
 6c5:	00 00                	add    %al,(%eax)
 6c7:	00 38                	add    %bh,(%eax)
 6c9:	fd                   	std    
 6ca:	ff                   	(bad)  
 6cb:	ff 10                	call   *(%eax)
 6cd:	00 00                	add    %al,(%eax)
 6cf:	00 00                	add    %al,(%eax)
 6d1:	00 00                	add    %al,(%eax)
 6d3:	00 28                	add    %ch,(%eax)
 6d5:	00 00                	add    %al,(%eax)
 6d7:	00 54 00 00          	add    %dl,0x0(%eax,%eax,1)
 6db:	00 71 fe             	add    %dh,-0x2(%ecx)
 6de:	ff                   	(bad)  
 6df:	ff 4f 00             	decl   0x0(%edi)
 6e2:	00 00                	add    %al,(%eax)
 6e4:	00 44 0c 01          	add    %al,0x1(%esp,%ecx,1)
 6e8:	00 47 10             	add    %al,0x10(%edi)
 6eb:	05 02 75 00 43       	add    $0x43007502,%eax
 6f0:	0f 03 75 7c          	lsl    0x7c(%ebp),%esi
 6f4:	06                   	push   %es
 6f5:	7c c1                	jl     6b8 <__GNU_EH_FRAME_HDR+0x78>
 6f7:	0c 01                	or     $0x1,%al
 6f9:	00 41 c5             	add    %al,-0x3b(%ecx)
 6fc:	43                   	inc    %ebx
 6fd:	0c 04                	or     $0x4,%al
 6ff:	04 10                	add    $0x10,%al
 701:	00 00                	add    %al,(%eax)
 703:	00 80 00 00 00 94    	add    %al,-0x6c000000(%eax)
 709:	fe                   	(bad)  
 70a:	ff                   	(bad)  
 70b:	ff 04 00             	incl   (%eax,%eax,1)
 70e:	00 00                	add    %al,(%eax)
 710:	00 00                	add    %al,(%eax)
 712:	00 00                	add    %al,(%eax)
 714:	48                   	dec    %eax
 715:	00 00                	add    %al,(%eax)
 717:	00 94 00 00 00 84 fe 	add    %dl,-0x17c0000(%eax,%eax,1)
 71e:	ff                   	(bad)  
 71f:	ff 5d 00             	lcall  *0x0(%ebp)
 722:	00 00                	add    %al,(%eax)
 724:	00 41 0e             	add    %al,0xe(%ecx)
 727:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 72d:	87 03                	xchg   %eax,(%ebx)
 72f:	41                   	inc    %ecx
 730:	0e                   	push   %cs
 731:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 737:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 73e:	24 41                	and    $0x41,%al
 740:	0e                   	push   %cs
 741:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 745:	44                   	inc    %esp
 746:	0e                   	push   %cs
 747:	30 4d 0e             	xor    %cl,0xe(%ebp)
 74a:	20 47 0e             	and    %al,0xe(%edi)
 74d:	14 41                	adc    $0x41,%al
 74f:	c3                   	ret    
 750:	0e                   	push   %cs
 751:	10 41 c6             	adc    %al,-0x3a(%ecx)
 754:	0e                   	push   %cs
 755:	0c 41                	or     $0x41,%al
 757:	c7                   	(bad)  
 758:	0e                   	push   %cs
 759:	08 41 c5             	or     %al,-0x3b(%ecx)
 75c:	0e                   	push   %cs
 75d:	04 00                	add    $0x0,%al
 75f:	00 10                	add    %dl,(%eax)
 761:	00 00                	add    %al,(%eax)
 763:	00 e0                	add    %ah,%al
 765:	00 00                	add    %al,(%eax)
 767:	00 98 fe ff ff 02    	add    %bl,0x2fffffe(%eax)
 76d:	00 00                	add    %al,(%eax)
 76f:	00 00                	add    %al,(%eax)
 771:	00 00                	add    %al,(%eax)
 773:	00 18                	add    %bl,(%eax)
 775:	00 00                	add    %al,(%eax)
 777:	00 f4                	add    %dh,%ah
 779:	00 00                	add    %al,(%eax)
 77b:	00 94 fe ff ff 14 00 	add    %dl,0x14ffff(%esi,%edi,8)
 782:	00 00                	add    %al,(%eax)
 784:	00 41 0e             	add    %al,0xe(%ecx)
 787:	08 83 02 4e 0e 10    	or     %al,0x100e4e02(%ebx)
 78d:	00 00                	add    %al,(%eax)
	...

00000790 <__FRAME_END__>:
 790:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

00001ed8 <__frame_dummy_init_array_entry>:
    1ed8:	40                   	inc    %eax
    1ed9:	05                   	.byte 0x5
	...

Disassembly of section .fini_array:

00001edc <__do_global_dtors_aux_fini_array_entry>:
    1edc:	f0 04 00             	lock add $0x0,%al
	...

Disassembly of section .dynamic:

00001ee0 <_DYNAMIC>:
    1ee0:	01 00                	add    %eax,(%eax)
    1ee2:	00 00                	add    %al,(%eax)
    1ee4:	01 00                	add    %eax,(%eax)
    1ee6:	00 00                	add    %al,(%eax)
    1ee8:	0c 00                	or     $0x0,%al
    1eea:	00 00                	add    %al,(%eax)
    1eec:	a0 03 00 00 0d       	mov    0xd000003,%al
    1ef1:	00 00                	add    %al,(%eax)
    1ef3:	00 24 06             	add    %ah,(%esi,%eax,1)
    1ef6:	00 00                	add    %al,(%eax)
    1ef8:	19 00                	sbb    %eax,(%eax)
    1efa:	00 00                	add    %al,(%eax)
    1efc:	d8 1e                	fcomps (%esi)
    1efe:	00 00                	add    %al,(%eax)
    1f00:	1b 00                	sbb    (%eax),%eax
    1f02:	00 00                	add    %al,(%eax)
    1f04:	04 00                	add    $0x0,%al
    1f06:	00 00                	add    %al,(%eax)
    1f08:	1a 00                	sbb    (%eax),%al
    1f0a:	00 00                	add    %al,(%eax)
    1f0c:	dc 1e                	fcompl (%esi)
    1f0e:	00 00                	add    %al,(%eax)
    1f10:	1c 00                	sbb    $0x0,%al
    1f12:	00 00                	add    %al,(%eax)
    1f14:	04 00                	add    $0x0,%al
    1f16:	00 00                	add    %al,(%eax)
    1f18:	f5                   	cmc    
    1f19:	fe                   	(bad)  
    1f1a:	ff 6f ac             	ljmp   *-0x54(%edi)
    1f1d:	01 00                	add    %eax,(%eax)
    1f1f:	00 05 00 00 00 4c    	add    %al,0x4c000000
    1f25:	02 00                	add    (%eax),%al
    1f27:	00 06                	add    %al,(%esi)
    1f29:	00 00                	add    %al,(%eax)
    1f2b:	00 cc                	add    %cl,%ah
    1f2d:	01 00                	add    %eax,(%eax)
    1f2f:	00 0a                	add    %cl,(%edx)
    1f31:	00 00                	add    %al,(%eax)
    1f33:	00 b1 00 00 00 0b    	add    %dh,0xb000000(%ecx)
    1f39:	00 00                	add    %al,(%eax)
    1f3b:	00 10                	add    %dl,(%eax)
    1f3d:	00 00                	add    %al,(%eax)
    1f3f:	00 15 00 00 00 00    	add    %dl,0x0
    1f45:	00 00                	add    %al,(%eax)
    1f47:	00 03                	add    %al,(%ebx)
    1f49:	00 00                	add    %al,(%eax)
    1f4b:	00 d8                	add    %bl,%al
    1f4d:	1f                   	pop    %ds
    1f4e:	00 00                	add    %al,(%eax)
    1f50:	02 00                	add    (%eax),%al
    1f52:	00 00                	add    %al,(%eax)
    1f54:	10 00                	adc    %al,(%eax)
    1f56:	00 00                	add    %al,(%eax)
    1f58:	14 00                	adc    $0x0,%al
    1f5a:	00 00                	add    %al,(%eax)
    1f5c:	11 00                	adc    %eax,(%eax)
    1f5e:	00 00                	add    %al,(%eax)
    1f60:	17                   	pop    %ss
    1f61:	00 00                	add    %al,(%eax)
    1f63:	00 90 03 00 00 11    	add    %dl,0x11000003(%eax)
    1f69:	00 00                	add    %al,(%eax)
    1f6b:	00 50 03             	add    %dl,0x3(%eax)
    1f6e:	00 00                	add    %al,(%eax)
    1f70:	12 00                	adc    (%eax),%al
    1f72:	00 00                	add    %al,(%eax)
    1f74:	40                   	inc    %eax
    1f75:	00 00                	add    %al,(%eax)
    1f77:	00 13                	add    %dl,(%ebx)
    1f79:	00 00                	add    %al,(%eax)
    1f7b:	00 08                	add    %cl,(%eax)
    1f7d:	00 00                	add    %al,(%eax)
    1f7f:	00 1e                	add    %bl,(%esi)
    1f81:	00 00                	add    %al,(%eax)
    1f83:	00 08                	add    %cl,(%eax)
    1f85:	00 00                	add    %al,(%eax)
    1f87:	00 fb                	add    %bh,%bl
    1f89:	ff                   	(bad)  
    1f8a:	ff 6f 01             	ljmp   *0x1(%edi)
    1f8d:	00 00                	add    %al,(%eax)
    1f8f:	08 fe                	or     %bh,%dh
    1f91:	ff                   	(bad)  
    1f92:	ff 6f 10             	ljmp   *0x10(%edi)
    1f95:	03 00                	add    (%eax),%eax
    1f97:	00 ff                	add    %bh,%bh
    1f99:	ff                   	(bad)  
    1f9a:	ff 6f 01             	ljmp   *0x1(%edi)
    1f9d:	00 00                	add    %al,(%eax)
    1f9f:	00 f0                	add    %dh,%al
    1fa1:	ff                   	(bad)  
    1fa2:	ff 6f fe             	ljmp   *-0x2(%edi)
    1fa5:	02 00                	add    (%eax),%al
    1fa7:	00 fa                	add    %bh,%dl
    1fa9:	ff                   	(bad)  
    1faa:	ff 6f 04             	ljmp   *0x4(%edi)
	...

Disassembly of section .got:

00001fd8 <_GLOBAL_OFFSET_TABLE_>:
    1fd8:	e0 1e                	loopne 1ff8 <_GLOBAL_OFFSET_TABLE_+0x20>
	...
    1fe2:	00 00                	add    %al,(%eax)
    1fe4:	e6 03                	out    %al,$0x3
    1fe6:	00 00                	add    %al,(%eax)
    1fe8:	f6 03 00             	testb  $0x0,(%ebx)
	...
    1ff7:	00 4d 05             	add    %cl,0x5(%ebp)
    1ffa:	00 00                	add    %al,(%eax)
    1ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .data:

00002000 <__data_start>:
    2000:	00 00                	add    %al,(%eax)
	...

00002004 <__dso_handle>:
    2004:	04 20                	add    $0x20,%al
	...

Disassembly of section .bss:

00002008 <__bss_start>:
    2008:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x328>
   a:	74 75                	je     81 <_init-0x31f>
   c:	20 37                	and    %dh,(%edi)
   e:	2e 33 2e             	xor    %cs:(%esi),%ebp
  11:	30 2d 31 36 75 62    	xor    %ch,0x62753631
  17:	75 6e                	jne    87 <_init-0x319>
  19:	74 75                	je     90 <_init-0x310>
  1b:	33 29                	xor    (%ecx),%ebp
  1d:	20 37                	and    %dh,(%edi)
  1f:	2e 33 2e             	xor    %cs:(%esi),%ebp
  22:	30 00                	xor    %al,(%eax)
